name: CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  check-templates:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: taiki-e/install-action@v2
      with:
        tool: cargo-binstall

    - run: cargo binstall -y rust-script@0.34.0

    - run: rust-script _scripts/check-templates.rs

  fmt-clippy-a-p:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install sccache
      run: |
        SCCACHE_VERSION='v0.7.7'
        curl -L https://github.com/mozilla/sccache/releases/download/$SCCACHE_VERSION/sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl.tar.gz \
          | tar -xOz sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl/sccache \
          > /home/runner/.cargo/bin/sccache \
          && chmod +x /home/runner/.cargo/bin/sccache

    - name: Check formatting and Clippy
      shell: bash
      run: ./ci.sh a q
      env:
        RUSTC_WRAPPER: /home/runner/.cargo/bin/sccache
        CARGO_TARGET_DIR: /tmp/target

    - name: Show sccache stats
      run: /home/runner/.cargo/bin/sccache --show-stats

  fmt-clippy-q-z:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install sccache
      run: |
        SCCACHE_VERSION='v0.7.7'
        curl -L https://github.com/mozilla/sccache/releases/download/$SCCACHE_VERSION/sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl.tar.gz \
          | tar -xOz sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl/sccache \
          > /home/runner/.cargo/bin/sccache \
          && chmod +x /home/runner/.cargo/bin/sccache

    - name: Check formatting and Clippy
      shell: bash
      run: ./ci.sh q zzz
      env:
        RUSTC_WRAPPER: /home/runner/.cargo/bin/sccache
        CARGO_TARGET_DIR: /tmp/target

    - name: Show sccache stats
      run: /home/runner/.cargo/bin/sccache --show-stats
