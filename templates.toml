# Shuttle Template Definitions
#
# The schema is defined in `shuttle_common::templates`.
# Use `rust-script _scripts/check-templates.rs` to validate this list.
version = 1


## OFFICIAL STARTERS ##

[starters.actix-web-hello-world]
title = "Actix Web"
description = "Powerful and fast web framework"
path = "actix-web/hello-world"
use_cases = ["Web app"]
tags = ["actix-web"]
template = "actix-web"

[starters.axum-hello-world]
title = "Axum"
description = "Modular web framework from the Tokio ecosystem"
path = "axum/hello-world"
use_cases = ["Web app"]
tags = ["axum"]
template = "axum"

[starters.loco-hello-world]
title = "Loco"
description = "Batteries included web framework based on Axum"
path = "loco/hello-world"
use_cases = ["Web app"]
tags = ["loco"]
template = "loco"

[starters.poem-hello-world]
title = "Poem"
description = "Full-featured and easy-to-use web framework"
path = "poem/hello-world"
use_cases = ["Web app"]
tags = ["poem"]
template = "poem"

[starters.poise-hello-world]
title = "Poise"
description = "Discord Bot framework with good slash command support"
path = "poise/hello-world"
use_cases = ["Discord bot"]
tags = ["poise", "serenity"]
template = "poise"

[starters.rocket-hello-world]
title = "Rocket"
description = "Simple and easy-to-use web framework"
path = "rocket/hello-world"
use_cases = ["Web app"]
tags = ["rocket"]
template = "rocket"

[starters.salvo-hello-world]
title = "Salvo"
description = "Full-featured and easy-to-use web framework"
path = "salvo/hello-world"
use_cases = ["Web app"]
tags = ["salvo"]
template = "salvo"

[starters.serenity-hello-world]
title = "Serenity"
description = "Discord Bot framework"
path = "serenity/hello-world"
use_cases = ["Discord bot"]
tags = ["serenity"]
template = "serenity"

[starters.thruster-hello-world]
title = "Thruster"
description = "Web framework"
path = "thruster/hello-world"
use_cases = ["Web app"]
tags = ["thruster"]
template = "thruster"

[starters.tide-hello-world]
title = "Tide"
description = "Web framework"
path = "tide/hello-world"
use_cases = ["Web app"]
tags = ["tide"]
template = "tide"

[starters.tower-hello-world]
title = "Tower"
description = "Modular service library"
path = "tower/hello-world"
use_cases = ["Web app"]
tags = ["tower"]
template = "tower"

[starters.warp-hello-world]
title = "Warp"
description = "Web framework"
path = "warp/hello-world"
use_cases = ["Web app"]
tags = ["warp"]
template = "warp"

[starters.no-framework]
title = "No framework"
description = "An empty implementation of the Shuttle Service trait"
path = "custom-service/none"
use_cases = []
tags = ["diy"]
template = "none"


## OFFICIAL TEMPLATES ##

[templates.actix-web-postgres]
title = "Postgres"
description = "Todo list with a Postgres database"
path = "actix-web/postgres"
use_cases = ["Web app", "Storage"]
tags = ["actix-web", "database", "postgres"]

[templates.actix-web-clerk-react]
title = "Clerk authentication"
description = "Fullstack Rust+React with auth provider logic"
path = "actix-web/clerk"
use_cases = ["Web app", "Authentication"]
tags = ["actix-web", "clerk", "react", "typescript", "tailwind"]

[templates.actix-cookie-authentication]
title = "Cookie Authentication"
description = "Use JWT to authenticate API endpoints"
path = "actix-web/cookie-authentication"
use_cases = ["Web app", "Authentication"]
tags = ["actix-web", "jwt"]

[templates.actix-websocket-actorless]
title = "Websockets Actorless"
description = "Health monitoring service using websockets"
path = "actix-web/websocket-actorless"
use_cases = ["Web app", "Monitoring"]
tags = ["actix-web", "websocket"]

[templates.actix-static-files]
title = "File server"
description = "Hello World page that serves static HTML and JS files"
path = "actix-web/static-files"
use_cases = ["Web app"]
tags = ["actix-web"]

[templates.axum-htmx-crud]
title = "HTMX"
description = "Simple CRUD app using HTMX and Askama"
path = "axum/htmx-crud"
use_cases = ["Web app", "Storage"]
tags = ["axum", "htmx", "database", "postgres"]

[templates.axum-jwt-authentication]
title = "JWT authentication"
description = "Use JWT to authenticate API endpoints"
path = "axum/jwt-authentication"
use_cases = ["Web app", "Authentication"]
tags = ["axum", "jwt"]

[templates.axum-postgres]
title = "Postgres"
description = "Todo list with a Postgres database"
path = "axum/postgres"
use_cases = ["Web app", "Storage"]
tags = ["axum", "database", "postgres"]

[templates.axum-qdrant]
title = "Qdrant"
description = "Connecting to Qdrant cloud with shuttle-qdrant"
path = "axum/qdrant"
use_cases = ["Web app", "Storage", "AI"]
tags = ["axum", "database", "qdrant"]

[templates.axum-static-files]
title = "File server"
description = "Hello World static file server with tower-http"
path = "axum/static-files"
use_cases = ["Web app"]
tags = ["axum"]

[templates.axum-turso]
title = "Turso"
description = "Connect to a Turso DB with shuttle-turso"
path = "axum/turso"
use_cases = ["Web app", "Storage"]
tags = ["axum", "database", "libsql", "sqlite"]

[templates.axum-websocket]
title = "Websockets"
description = "Health monitoring service using websockets"
path = "axum/websocket"
use_cases = ["Web app", "Monitoring"]
tags = ["axum", "websocket"]

[templates.request-scheduler]
title = "Request Scheduler"
description = "Schedule requests with a cron schedule"
path = "custom-service/request-scheduler"
use_cases = ["Web app", "Cron jobs", "Storage"]
tags = ["axum"]

[templates.axum-next-fullstack-saas]
title = "Fullstack SaaS"
description = "Opinionated fullstack web app with pre-made routes and assets"
path = "fullstack-templates/saas"
use_cases = ["Web app", "Authentication", "Storage", "Monetization"]
tags = ["axum", "next.js", "database", "postgres", "typescript", "tailwind"]

[templates.poem-mongodb]
title = "MongoDB"
description = "Todo list with a MongoDB database"
path = "poem/mongodb"
use_cases = ["Web app", "Storage"]
tags = ["poem", "database", "mongodb"]

[templates.rocket-dyn-templates]
title = "Handlebars dynamic templates"
description = "HTML templating with Handlebars"
path = "rocket/dyn-templates"
use_cases = ["Web app"]
tags = ["rocket", "handlebars"]

[templates.rocket-jwt-authentication]
title = "JWT authentication"
description = "Use JWT to authenticate API endpoints"
path = "rocket/jwt-authentication"
use_cases = ["Web app", "Authentication"]
tags = ["rocket", "jwt"]

[templates.rocket-opendal-memory]
title = "OpenDAL in-memory store"
description = "A key-value store using OpenDAL"
path = "rocket/opendal-memory"
use_cases = ["Web app", "Storage"]
tags = ["rocket", "opendal"]

[templates.rocket-postgres]
title = "Postgres"
description = "Todo list with a Postgres database"
path = "rocket/postgres"
use_cases = ["Web app", "Storage"]
tags = ["rocket", "database", "postgres"]

[templates.rocket-static-files]
title = "File server"
description = "Hello World page that serves static HTML files"
path = "rocket/static-files"
use_cases = ["Web app"]
tags = ["rocket"]

[templates.rocket-url-shortener]
title = "URL shortener"
description = "Save long URLs behind a short one, with Postgres storage"
path = "rocket/url-shortener"
use_cases = ["Web app", "Storage"]
tags = ["rocket", "database", "postgres"]

[templates.salvo-image-rescaler]
title = "Image Rescaler"
description = "Use the image library to rescale the Shuttle logo"
path = "salvo/image-rescaler"
use_cases = ["Web app", "Image processing"]
tags = ["salvo", "image"]

[templates.serenity-postgres]
title = "Postgres"
description = "Todo list Discord bot with a Postgres database"
path = "serenity/postgres"
use_cases = ["Discord bot", "Storage"]
tags = ["serenity", "database", "postgres"]

[templates.serenity-weather-forecast]
title = "Weather Bot"
description = "Weather forecast Discord bot using the Accuweather API"
path = "serenity/weather-forecast"
use_cases = ["Discord bot"]
tags = ["serenity"]

[templates.shuttle-cron]
title = "Shutte custom Cron service"
description = "Schedule tasks on a cron schedule with apalis"
path = "shuttle-cron"
use_cases = ["Cron jobs", "Storage"]
tags = ["axum", "apalis", "database", "postgres"]

[templates.custom-tracing-subscriber]
title = "Custom Tracing Subscriber"
description = "How to use a custom tracing-subscriber on Shuttle"
path = "tracing/custom-tracing-subscriber"
use_cases = ["Web App", "Logging"]
tags = ["actix-web", "tracing"]


## EXAMPLES ##

[examples.metadata]
title = "Shuttle Metadata"
description = "Basic usage of shuttle-metadata"
path = "axum/metadata"
use_cases = []
tags = ["axum"]

[examples.persist]
title = "Shuttle Persist"
description = "Basic usage of shuttle-persist"
path = "rocket/persist"
use_cases = ["Web app", "Storage"]
tags = ["rocket"]

[examples.secrets]
title = "Shuttle Secrets"
description = "Basic usage of shuttle-secrets"
path = "rocket/secrets"
use_cases = ["Web app"]
tags = ["rocket"]

[examples.workspace]
title = "Workspace"
description = "How to use a Shuttle app in a Cargo workspace"
path = "rocket/workspace"
use_cases = []
tags = []

[examples.custom-resource-pdo]
title = "Custom Resource"
description = "A custom PDO resource for the Shuttle main macro"
path = "custom-resource/pdo"
use_cases = []
tags = ["diy"]

[examples.standalone-binary]
title = "Standalone binary"
description = "How to run an app both with Shuttle and standalone"
path = "other/standalone-binary"
use_cases = []
tags = ["diy", "axum"]


## TUTORIALS ##

[tutorials]


## COMMUNITY TEMPLATES ##

# --- HOW TO ADD TO THE LIST ---
# 1. Your example should be in a public repository.
# 2. If it has a license, it should allow users to copy and modify the code.
# 3. Follow the pattern and add it to the list below

[community_templates.actix-github-oauth]
title = "GitHub Login (OAuth)"
description = "Sample app demonstrating GitHub OAuth login using Actix Web"
use_cases = ["Web App", "Authentication"]
tags = ["actix-web", "oauth"]
author = "robjtede"
repo = "https://github.com/robjtede/actix-examples-oauth-github"

[community_templates.fullstack-rust-axum-yew]
title = "Fullstack Rust"
description = "A template for fullstack Rust projects with Yew"
use_cases = ["Web App"]
tags = ["axum", "yew"]
author = "TylerBloom"
repo = "https://github.com/TylerBloom/shuttle-fullstack-rust-example"

[community_templates.axum-web-app-yew]
title = "Web App with Yew"
description = "A template for a web app using the Yew framework"
use_cases = ["Web App"]
tags = ["axum", "yew"]
author = "sentinel1909"
repo = "https://github.com/sentinel1909/shuttle-template-yew"

[community_templates.actix-web-api]
title = "Web API with Actix Web"
description = "A template for starting an API with Actix Web"
use_cases = ["Web App"]
tags = ["actix-web"]
author = "sentinel1909"
repo = "https://github.com/sentinel1909/shuttle-template-actix"

[community_templates.rocket-yew-sled]
title = "Web API with Rocket and Sled"
description = "A Full Stack CRUD template for starting an API with Rocket, Sled, and Yew"
use_cases = ["Web App"]
tags = ["rocket", "yew"]
author = "wiseaidev"
repo = "https://github.com/wiseaidev/rocket-yew-starter-pack"
